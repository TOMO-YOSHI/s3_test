[{"/Users/yoshidatomohiro/Documents/01_programing_training/aws_s3/s3_test/react-app-s3/src/index.js":"1","/Users/yoshidatomohiro/Documents/01_programing_training/aws_s3/s3_test/react-app-s3/src/App.js":"2","/Users/yoshidatomohiro/Documents/01_programing_training/aws_s3/s3_test/react-app-s3/src/reportWebVitals.js":"3","/Users/yoshidatomohiro/Documents/01_programing_training/aws_s3/s3_test/react-app-s3/src/components/S3Test.js":"4","/Users/yoshidatomohiro/Documents/01_programing_training/aws_s3/s3_test/react-app-s3/src/services/s3Handler.js":"5"},{"size":500,"mtime":1612145938848,"results":"6","hashOfConfig":"7"},{"size":2635,"mtime":1613716683993,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1612145938849,"results":"9","hashOfConfig":"7"},{"size":5578,"mtime":1613717666868,"results":"10","hashOfConfig":"7"},{"size":3817,"mtime":1613717378016,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1vzto9n",{"filePath":"15","messages":"16","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/yoshidatomohiro/Documents/01_programing_training/aws_s3/s3_test/react-app-s3/src/index.js",[],["24","25"],"/Users/yoshidatomohiro/Documents/01_programing_training/aws_s3/s3_test/react-app-s3/src/App.js",["26","27","28","29","30"],"import React, { useState } from 'react';\nimport S3Test from './components/S3Test';\n\nconst App = () => {\n  return <S3Test />;\n  const [success, setSuccess] = useState(false);\n  const [url, setUrl] = useState(\"\");\n  const [uploadInput, setUploadInput] = useState(\"\");\n  const [isUploading, setIsUploading] = useState(false);\n  \n  const handleChange = (ev) => {\n    setSuccess(false);\n    setUrl(\"\")    \n  }\n\n  // Perform the upload\n  const handleUpload = (ev) => {\n    setIsUploading(true);\n\n    let file = uploadInput.files[0];\n    // Split the filename to get the name and type\n    let fileParts = uploadInput.files[0].name.split('.');\n    let fileName = fileParts[0];\n    let fileType = fileParts[1];\n    console.log(\"Preparing the upload\");\n    fetch(\"http://localhost:8888/sign_s3\",\n      {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({fileName: fileName, fileType: fileType}),\n      }\n    ).then(response => {\n      return response.json();\n    }).then( response => {\n      const returnData = response.data.returnData;\n      const signedRequest = returnData.signedRequest;\n      const url = returnData.url;\n      setUrl(url)\n      console.log(\"Recieved a signed request \" + signedRequest);\n      \n      if (fileType === \"mp4\" || fileType === \"mov\") {\n        fileType = \"video/\" + fileType;\n      }    \n      fetch(signedRequest, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": fileType },\n        body: file\n        })\n      // fetch(signedRequest,file,options)\n      .then(result => {\n        console.log(\"Response from s3\")\n        setSuccess(true);\n        setIsUploading(false);\n      })\n      .catch(error => {\n        alert(\"ERROR \" + JSON.stringify(error));\n        setIsUploading(false);\n      })\n    })\n    .catch(error => {\n      alert(JSON.stringify(error));\n      setIsUploading(false);\n    })\n  }\n\n  const Success_message = () => (\n    <div style={{padding:50}}>\n      <h3 style={{color: 'green'}}>SUCCESSFUL UPLOAD</h3>\n      <a href={url}>Access the file here</a>\n      <br/>\n    </div>\n  )\n\n  const Uploading_message = () => (\n    <div style={{padding:50}}>\n      <h3 style={{color: 'red'}}>UPLOADING NOW...</h3>\n      <br/>\n    </div>\n  )\n\n  return (\n    <div className=\"App\">\n      <center>\n        <h1>UPLOAD A FILE</h1>\n        {success ? <Success_message/> : null}\n        {isUploading ? <Uploading_message/> : null}\n        <input onChange={handleChange} ref={(ref) => { setUploadInput(ref) }} type=\"file\"/>\n        <br/>\n        <button onClick={handleUpload}>UPLOAD</button>\n      </center>\n    </div>\n  );\n}\n\nexport default App;","/Users/yoshidatomohiro/Documents/01_programing_training/aws_s3/s3_test/react-app-s3/src/reportWebVitals.js",[],"/Users/yoshidatomohiro/Documents/01_programing_training/aws_s3/s3_test/react-app-s3/src/components/S3Test.js",["31","32","33"],"/Users/yoshidatomohiro/Documents/01_programing_training/aws_s3/s3_test/react-app-s3/src/services/s3Handler.js",["34","35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":6,"column":3,"nodeType":"42","messageId":"43","endLine":14,"endColumn":4},{"ruleId":"40","severity":1,"message":"41","line":17,"column":3,"nodeType":"42","messageId":"43","endLine":64,"endColumn":4},{"ruleId":"40","severity":1,"message":"41","line":66,"column":3,"nodeType":"42","messageId":"43","endLine":92,"endColumn":5},{"ruleId":"44","severity":1,"message":"45","line":85,"column":20,"nodeType":"46","endLine":85,"endColumn":38},{"ruleId":"44","severity":1,"message":"47","line":86,"column":24,"nodeType":"46","endLine":86,"endColumn":44},{"ruleId":"48","severity":1,"message":"49","line":87,"column":25,"nodeType":"46","endLine":87,"endColumn":55},{"ruleId":"44","severity":1,"message":"45","line":123,"column":20,"nodeType":"46","endLine":123,"endColumn":38},{"ruleId":"44","severity":1,"message":"47","line":125,"column":11,"nodeType":"46","endLine":125,"endColumn":31},{"ruleId":"50","severity":1,"message":"51","line":101,"column":27,"nodeType":"52","messageId":"53","endLine":101,"endColumn":29},{"ruleId":"50","severity":1,"message":"51","line":101,"column":46,"nodeType":"52","messageId":"53","endLine":101,"endColumn":48},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","react/jsx-pascal-case","Imported JSX component Success_message must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Uploading_message must be in PascalCase or SCREAMING_SNAKE_CASE","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]